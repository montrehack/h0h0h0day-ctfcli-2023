// @generated by protobuf-ts 2.9.1 with parameter long_type_string
// @generated from protobuf file "schema_v2.proto" (package "h0h0h0", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SantaList } from "./schema_v2";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { QueryResponse } from "./schema_v2";
import type { QueryRequest } from "./schema_v2";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service h0h0h0.SantaList
 */
export interface ISantaListClient {
    /**
     * @generated from protobuf rpc: GetValues(h0h0h0.QueryRequest) returns (h0h0h0.QueryResponse);
     */
    getValues(input: QueryRequest, options?: RpcOptions): UnaryCall<QueryRequest, QueryResponse>;
}
/**
 * @generated from protobuf service h0h0h0.SantaList
 */
export class SantaListClient implements ISantaListClient, ServiceInfo {
    typeName = SantaList.typeName;
    methods = SantaList.methods;
    options = SantaList.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetValues(h0h0h0.QueryRequest) returns (h0h0h0.QueryResponse);
     */
    getValues(input: QueryRequest, options?: RpcOptions): UnaryCall<QueryRequest, QueryResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryRequest, QueryResponse>("unary", this._transport, method, opt, input);
    }
}
